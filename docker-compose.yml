services:
  mongodb:
    # 容器的名称为 mongo
    container_name: mongo
    # 使用的镜像名称
    image: mongo:latest
    # 当 docker 服务启动后，自动启动 mongodb 容器
    restart: always
    # 对外映射的端口

    ports:
      - 27017:27017
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
    # 宿主机硬盘目录映射容器内的存放数据的目录
    volumes:
      - /data/db:/data/db
    # 增加启动参数，--auth，表示连接 mongodb 需要用户名和密码
    # command:
    #   - "--auth"

  redis:
    container_name: redis
    image: redis:alpine

    ports:
      - 6379:6379
    restart: always

  mcim_api:
    container_name: mcim_api
    image: mcim_api
    build:
      context: .
      dockerfile: ./docker/fastapi

    ports:
      - 8000:8000
    restart: always
    depends_on:
      - mongodb
      - redis
    volumes:
      - /opt/mcim/config:/config
      - /opt/mcim/logs:/logs

  # mcim_api_gunicorn:
  #   container_name: mcim_api_gunicorn
  #   image: mcim_api
  #   build:
  #     context: .
  #     dockerfile: ./docker/fastapi_gunicorn

  #   ports:
  #     - 8000:8000
  #   restart: always
  #   depends_on:
  #     - mongodb
  #     - redis
  #   volumes:
  #     - /opt/mcim/config:/config
  #     - /opt/mcim/logs:/logs
  #   command: >
  #   sh -c "rm -rf /tmp/prometheus &&
  #          mkdir -p /tmp/prometheus &&
  #          gunicorn -k uvicorn.workers.UvicornWorker -c gunicorn_config.py app:APP"

  mcim_sync:
    container_name: mcim_sync
    image: mcim_sync
    build:
      context: .
      dockerfile: ./docker/dramatiq

    restart: always
    depends_on:
      - mongodb
      - redis
    volumes:
      - /opt/mcim/config:/config
      - /opt/mcim/logs:/logs
      - /data/alist:/data # rclone 挂载位置

  prometheus:
    image: prom/prometheus:latest
    restart: unless-stopped
    container_name: prometheus
    ports:
      - 9090:9090
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml

  grafana:
    image: grafana/grafana
    container_name: grafana
    restart: unless-stopped
    depends_on:
      - prometheus
    ports:
      - 3000:3000
    volumes:
      - ./grafana/provisioning:/etc/grafana/provisioning
    env_file:
      - ./grafana/config.monitoring